package io.github.punishu;

import io.github.punishu.utils.Colors;
import lombok.AllArgsConstructor;
import org.bukkit.ChatColor;

import java.text.MessageFormat;
import java.util.ArrayList;
import java.util.List;

@AllArgsConstructor
public enum Locale {
	REDIS_CHANNEL("DATABASE.REDIS.CHANNEL"),
	MONGO_DATABASE("DATABASE.MONGO.DB"),
	MONGO_URI("DATABASE.MONGO.URI"),

	NO_PERMISSION("MESSAGES.NO_PERMISSION"),
	SERVER_NAME("GENERAL.SERVER_NAME"),
	CONSOLE_NAME("GENERAL.CONSOLE_NAME"),

	BLACKLIST_MESSAGE("MESSAGES.BLACKLIST_MESSAGE"),
	BAN_MESSAGE("MESSAGES.BAN_MESSAGE"),
	MUTE_MESSAGE("MESSAGES.MUTE_MESSAGE"),
	KICK_MESSAGE("MESSAGES.KICK_MESSAGE"),
	WARN_MESSAGE("MESSAGES.WARN_MESSAGE"),
	SILENT_PREFIX("MESSAGES.SILENT_PREFIX"),
	BROADCAST("MESSAGES.BROADCAST"),
	PUNISHMENT_SUCCESS("MESSAGES.PUNISHMENT.SUCCESS"),
	PUNISHMENT_HOVER("MESSAGES.PUNISHMENT.HOVER"),
	PUNISHMENT_HOVER_TEMP("MESSAGES.PUNISHMENT.HOVER_TEMP"),
	UNPUNISHMENT_SUCCESS("MESSAGES.UNPUNISHMENT.SUCCESS"),
	UNPUNISHMENT_HOVER("MESSAGES.UNPUNISHMENT.HOVER"),


	SILENT_PERMISSION("PERMISSIONS.SILENT_VIEW"),
	HISTORY_PERMISSION("PERMISSIONS.HISTORY"),
	PUNISH_PERMISSION("PERMISSIONS.PUNISH"),
	UNPUNISH_PERMISSION("PERMISSIONS.UNPUNISH"),
	MANUAL_PERMISSION("PERMISSIONS.MANUAL"),

	PUNISH_TITLE("MENUS.PUNISH.TITLE"),

	HISTORY_TITLE("MENUS.HISTORY.TITLE"),

	HISTORY_ACTIVE_NAME("MENUS.HISTORY.ACTIVE_NAME"),
	HISTORY_INACTIVE_NAME("MENUS.HISTORY.INACTIVE_NAME"),

	HISTORY_BLACKLIST_MATERIAL("MENUS.HISTORY.MATERIALS.BLACKLIST"),
	HISTORY_BAN_MATERIAL("MENUS.HISTORY.MATERIALS.BAN"),
	HISTORY_MUTE_MATERIAL("MENUS.HISTORY.MATERIALS.MUTE"),
	HISTORY_KICK_MATERIAL("MENUS.HISTORY.MATERIALS.KICK"),
	HISTORY_WARN_MATERIAL("MENUS.HISTORY.MATERIALS.WARN");

	private String path;

	public String format(PunishU plugin) {
		return ChatColor.translateAlternateColorCodes('&', plugin.getConfig().getString(path));
	}

	public List<String> formatLines(PunishU plugin) {
		List<String> lines = new ArrayList<>();

		for (String string : plugin.getConfig().getStringList(path)) {
			lines.add(Colors.get(string));
		}

		return lines;
	}
}
